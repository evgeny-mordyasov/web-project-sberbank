package ru.mordyasov.service.interfaces;

import java.util.List;
import java.util.Optional;

/**
 * Интерфейс AbstractService, содержащий в себе базовый функционал для всех Service-классов.
 * @param <T> - тип сущности, хранящейся в базе данных.
 * @param <ID> - тип идентификатора данной сущности.
 */
public interface AbstractService<T, ID> {
    /**
     * Функция, позволяющая найти контрагента в базе данных по указанному идентификатору.
     * @param id - переданное значение идентификатора.
     * @returns возвращает объект, если он существует. Если его нет, то будет возвращено Optional.empty().
     */
    Optional<T> find(ID id);

    /**
     * Процедура, позволяющая добавить объект в базу данных.
     * @param t - переданный объект для добавления.
     */
    void add(T t);

    /**
     * Процедура, позволяющая удалить объект из базы данных.
     * @param t - переданный объект для удаления.
     */
    void delete(T t);

    /**
     * Процедура, позволяющая внести изменения в объекте, хранящийся в базе данных.
     * @param t - измененный объект.
     */
    void update(T t);

    /**
     * Функция, позволяющая получить список всех объектов, находящихся в базе данных.
     * @return список всех объектов.
     */
    List<T> findAll();
}
